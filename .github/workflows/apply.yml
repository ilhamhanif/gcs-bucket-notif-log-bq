name: "Terraform"

on:
    push:
    pull_request:

permissions:
    contents: read

jobs:
    terraform:
        name: "Terraform Apply"
        runs-on: ubuntu-latest

        # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
        defaults:
            run:
                shell: bash

        steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout
              uses: actions/checkout@v3

            # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1

            # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
            - name: Terraform Init
              run: terraform -chdir=build init --backend-config=backend-dev.config
              env:
                  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

            # Checks that all Terraform configuration files adhere to a canonical format
            - name: Terraform Format
              run: terraform -chdir=build fmt -check
              env:
                  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

              # On push to "main", build or change infrastructure according to Terraform configuration files
              # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
            - name: Terraform Apply
              run: terraform -chdir=build apply -var-file variable-dev.tfvars -auto-approve
              env:
                  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
